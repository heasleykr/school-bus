# Generated by Django 4.1.1 on 2022-10-18 18:23

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('schoolbus', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profile_pic', models.ImageField(upload_to='')),
                ('age', models.PositiveIntegerField(null=True)),
                ('preferred_payment_method', models.CharField(choices=[('1', 'Bank Account'), ('2', 'Card on File')], max_length=36)),
                ('preferred_reimbursement_method', models.CharField(choices=[('1', 'Bank Account'), ('2', 'Card on File')], max_length=36)),
                ('emergency_contact_fist_name', models.CharField(max_length=50)),
                ('emergency_contact_last_name', models.CharField(max_length=50)),
                ('emergency_contact_phone', models.IntegerField(null=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=36)),
                ('routing_number', models.IntegerField()),
                ('account_number', models.IntegerField()),
                ('account_type', models.CharField(choices=[('1', 'Checking'), ('2', 'Savings')], max_length=36)),
            ],
        ),
        migrations.CreateModel(
            name='CardPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_type', models.CharField(choices=[('1', 'Debit'), ('2', 'Credit')], max_length=36)),
                ('card_maker', models.CharField(choices=[('1', 'Visa'), ('2', 'Mastercard'), ('3', 'American Express'), ('4', 'Discover')], max_length=36)),
                ('card_number', models.IntegerField()),
                ('exp_month', models.IntegerField()),
                ('exp_year', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_authorized_for_school', models.BooleanField()),
                ('date_authorized_start', models.DateTimeField()),
                ('date_authorized_end', models.DateTimeField()),
                ('authorized_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='InsurancePolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insurance_carrier', models.CharField(max_length=100)),
                ('policy_number', models.CharField(max_length=50)),
                ('policy_start_datetime', models.DateTimeField()),
                ('policy_end_datetime', models.DateTimeField()),
                ('vehicle_vin', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=36)),
                ('city', models.CharField(max_length=36)),
                ('state', models.CharField(max_length=36)),
                ('zip', models.CharField(max_length=36)),
                ('phone', models.CharField(max_length=36)),
            ],
            options={
                'verbose_name_plural': 'InsurancePolicies',
            },
        ),
        migrations.CreateModel(
            name='ParentPassenger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_authorized_for_school', models.BooleanField()),
                ('date_authorized_start', models.DateTimeField()),
                ('date_authorized_end', models.DateTimeField()),
                ('authorized_date', models.DateTimeField()),
                ('school', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='schoolbus.school')),
                ('schoolbus', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='schoolbus.schoolbus')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('make', models.CharField(max_length=36)),
                ('model', models.CharField(max_length=36)),
                ('color', models.CharField(max_length=36)),
                ('license_plate', models.CharField(max_length=36)),
                ('vin', models.CharField(max_length=100)),
                ('registartion_start_datetime', models.DateTimeField()),
                ('registration_end_datetime', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_latitude', models.IntegerField()),
                ('start_longitude', models.IntegerField()),
                ('end_latitude', models.IntegerField()),
                ('end_longitude', models.IntegerField()),
                ('distance', models.IntegerField()),
                ('loved', models.BooleanField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.parentpassenger')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolAuthorizingPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_authorized_for_school', models.BooleanField()),
                ('date_authorized_start', models.DateTimeField()),
                ('date_authorized_end', models.DateTimeField()),
                ('authorized_date', models.DateTimeField()),
                ('school_role', models.CharField(max_length=50)),
                ('school', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='schoolbus.school')),
                ('schoolbus', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='schoolbus.schoolbus')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Ride',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_payment', models.IntegerField()),
                ('duration', models.DurationField()),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('driver', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.driver')),
                ('trip', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.trip')),
            ],
        ),
        migrations.AddField(
            model_name='driver',
            name='insurance',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.insurancepolicy'),
        ),
        migrations.AddField(
            model_name='driver',
            name='school',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='schoolbus.school'),
        ),
        migrations.AddField(
            model_name='driver',
            name='schoolbus',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='schoolbus.schoolbus'),
        ),
        migrations.AddField(
            model_name='driver',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='driver',
            name='vehicle',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.vehicle'),
        ),
        migrations.CreateModel(
            name='ChildPassenger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_authorized_for_school', models.BooleanField()),
                ('date_authorized_start', models.DateTimeField()),
                ('date_authorized_end', models.DateTimeField()),
                ('authorized_date', models.DateTimeField()),
                ('parent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.parentpassenger')),
                ('school', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='schoolbus.school')),
                ('schoolbus', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='schoolbus.schoolbus')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='bank_account',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.bankaccount'),
        ),
        migrations.AddField(
            model_name='user',
            name='card_payment',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.cardpayment'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
